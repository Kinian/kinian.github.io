!function(n){var e={};function t(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return n[i].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=n,t.c=e,t.d=function(n,e,i){t.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:i})},t.r=function(n){Object.defineProperty(n,"__esModule",{value:!0})},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=10)}([function(n,e){n.exports=function(n){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!n||"string"!=typeof n)return n;var t=e.protocol+"//"+e.host,i=t+e.pathname.replace(/\/[^\/]*$/,"/");return n.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(n,e){var o,r=e.trim().replace(/^"(.*)"$/,function(n,e){return e}).replace(/^'(.*)'$/,function(n,e){return e});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(r)?n:(o=0===r.indexOf("//")?r:0===r.indexOf("/")?t+r:i+r.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(n,e,t){var i,o,r={},s=(i=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=i.apply(this,arguments)),o}),a=function(n){var e={};return function(n){if("function"==typeof n)return n();if(void 0===e[n]){var t=function(n){return document.querySelector(n)}.call(this,n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}}(),l=null,c=0,d=[],h=t(0);function u(n,e){for(var t=0;t<n.length;t++){var i=n[t],o=r[i.id];if(o){o.refs++;for(var s=0;s<o.parts.length;s++)o.parts[s](i.parts[s]);for(;s<i.parts.length;s++)o.parts.push(v(i.parts[s],e))}else{var a=[];for(s=0;s<i.parts.length;s++)a.push(v(i.parts[s],e));r[i.id]={id:i.id,refs:1,parts:a}}}}function p(n,e){for(var t=[],i={},o=0;o<n.length;o++){var r=n[o],s=e.base?r[0]+e.base:r[0],a={css:r[1],media:r[2],sourceMap:r[3]};i[s]?i[s].parts.push(a):t.push(i[s]={id:s,parts:[a]})}return t}function m(n,e){var t=a(n.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var i=d[d.length-1];if("top"===n.insertAt)i?i.nextSibling?t.insertBefore(e,i.nextSibling):t.appendChild(e):t.insertBefore(e,t.firstChild),d.push(e);else if("bottom"===n.insertAt)t.appendChild(e);else{if("object"!=typeof n.insertAt||!n.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=a(n.insertInto+" "+n.insertAt.before);t.insertBefore(e,o)}}function f(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n);var e=d.indexOf(n);e>=0&&d.splice(e,1)}function b(n){var e=document.createElement("style");return n.attrs.type="text/css",g(e,n.attrs),m(n,e),e}function g(n,e){Object.keys(e).forEach(function(t){n.setAttribute(t,e[t])})}function v(n,e){var t,i,o,r;if(e.transform&&n.css){if(!(r=e.transform(n.css)))return function(){};n.css=r}if(e.singleton){var s=c++;t=l||(l=b(e)),i=w.bind(null,t,s,!1),o=w.bind(null,t,s,!0)}else n.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=function(n){var e=document.createElement("link");return n.attrs.type="text/css",n.attrs.rel="stylesheet",g(e,n.attrs),m(n,e),e}(e),i=function(n,e,t){var i=t.css,o=t.sourceMap,r=void 0===e.convertToAbsoluteUrls&&o;(e.convertToAbsoluteUrls||r)&&(i=h(i));o&&(i+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var s=new Blob([i],{type:"text/css"}),a=n.href;n.href=URL.createObjectURL(s),a&&URL.revokeObjectURL(a)}.bind(null,t,e),o=function(){f(t),t.href&&URL.revokeObjectURL(t.href)}):(t=b(e),i=function(n,e){var t=e.css,i=e.media;i&&n.setAttribute("media",i);if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}.bind(null,t),o=function(){f(t)});return i(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;i(n=e)}else o()}}n.exports=function(n,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=s()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var t=p(n,e);return u(t,e),function(n){for(var i=[],o=0;o<t.length;o++){var s=t[o];(a=r[s.id]).refs--,i.push(a)}n&&u(p(n,e),e);for(o=0;o<i.length;o++){var a;if(0===(a=i[o]).refs){for(var l=0;l<a.parts.length;l++)a.parts[l]();delete r[a.id]}}}};var x,y=(x=[],function(n,e){return x[n]=e,x.filter(Boolean).join("\n")});function w(n,e,t,i){var o=t?"":i.css;if(n.styleSheet)n.styleSheet.cssText=y(e,o);else{var r=document.createTextNode(o),s=n.childNodes;s[e]&&n.removeChild(s[e]),s.length?n.insertBefore(r,s[e]):n.appendChild(r)}}},function(n,e,t){n.exports=t.p+"9c11cd8c3e7ddc1049ae46126bcd81c7.png"},function(n,e,t){n.exports=t.p+"7a64a568d375ed10769129706bf74ada.png"},function(n,e,t){n.exports=t.p+"83c2071719ab4acae4505de5b19f6f34.png"},function(n,e,t){n.exports=t.p+"6477b216de6df27cbb2097d7243fd295.jpg"},function(n,e){n.exports=function(n){var e=[];return e.toString=function(){return this.map(function(e){var t=function(n,e){var t=n[1]||"",i=n[3];if(!i)return t;if(e&&"function"==typeof btoa){var o=(s=i,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */"),r=i.sources.map(function(n){return"/*# sourceURL="+i.sourceRoot+n+" */"});return[t].concat(r).concat([o]).join("\n")}var s;return[t].join("\n")}(e,n);return e[2]?"@media "+e[2]+"{"+t+"}":t}).join("")},e.i=function(n,t){"string"==typeof n&&(n=[[null,n,""]]);for(var i={},o=0;o<this.length;o++){var r=this[o][0];"number"==typeof r&&(i[r]=!0)}for(o=0;o<n.length;o++){var s=n[o];"number"==typeof s[0]&&i[s[0]]||(t&&!s[2]?s[2]=t:t&&(s[2]="("+s[2]+") and ("+t+")"),e.push(s))}},e}},function(n,e){n.exports=function(n){return"string"!=typeof n?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),/["'() \t\n]/.test(n)?'"'+n.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"':n)}},function(n,e,t){var i=t(7);(n.exports=t(6)(!1)).push([n.i,"/** PARAMS **/\n/** MIXINS **/\n/** Fonts **/\n\n/** CSS **/\nbody {\n  margin: 0;\n  padding: 0;\n  background: #ffffff;\n  font-family: 'Noto Sans', sans-serif;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: default;\n  font-size: 15px;\n  background: url("+i(t(5))+");\n  overflow: hidden;\n}\n#datas {\n  display: none;\n}\n#system_content {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  z-index: 1;\n}\n/* Progress bar */\n.progress {\n  opacity: 0;\n  width: 350px;\n  height: 30px;\n  border-radius: 4px;\n  position: absolute;\n  left: calc(50% - 175px);\n  top: 50%;\n  background: #e8e8e8;\n  box-shadow: inset 0 1px 6px 0 rgba(48, 48, 48, 0.69);\n  z-index: 100;\n  border: 1px solid #828282;\n  animation: progress 5s linear;\n}\n.progress-bar {\n  background-image: -webkit-linear-gradient(-45deg, transparent 33%, rgba(0, 0, 0, 0.1) 33%, rgba(0, 0, 0, 0.1) 66%, transparent 66%), -webkit-linear-gradient(top, rgba(255, 255, 255, 0.25), rgba(0, 0, 0, 0.25)), -webkit-linear-gradient(left, #09c, #09c);\n  border-radius: 4px;\n  background-size: 55px 30px, 100% 100%, 100% 100%;\n  animation: progress-bar 5s linear;\n  width: 5%;\n  height: 100%;\n  position: relative;\n}\n.progress-bar:after {\n  content: '';\n  width: 10px;\n  height: 10px;\n  position: absolute;\n  border-radius: 100%;\n  right: 7px;\n  top: 10px;\n  background-color: white;\n}\n@keyframes progress {\n  1% {\n    opacity: 1;\n  }\n  80% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n@keyframes progress-bar {\n  10% {\n    width: 10%;\n  }\n  100% {\n    width: 100%;\n    background-position: -100px 0;\n  }\n}\n/* System bar */\n#system_bar {\n  height: 0;\n  background: #ffffff;\n  width: calc(100% - 10px);\n  padding: 0 5px;\n  z-index: 2;\n  display: flex;\n  color: #353535;\n  position: absolute;\n  top: 0;\n  transition: height 0.3s ease-in-out;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.48);\n}\n#system_time {\n  visibility: hidden;\n  text-align: center;\n  line-height: 20px;\n  font-size: 14px;\n}\n.user_icon {\n  background: white;\n  z-index: 2;\n  position: relative;\n  height: 100px;\n  visibility: hidden;\n  transform: scale(0.2);\n  transition: visibility 0s linear 0.5s,transform 0.5s linear;\n  cursor: pointer;\n  overflow: hidden;\n  border-radius: 50%;\n  border: 2px solid black;\n}\n.user_icon:before {\n  content: '';\n  display: block;\n  border: 6px solid rgba(255, 255, 255, 0.35);\n  width: calc(100% - 12px);\n  height: calc(100% - 12px);\n  border-radius: 50%;\n  position: absolute;\n}\n.user_icon:hover:before {\n  border: 6px solid rgba(255, 255, 255, 0.19);\n}\n.user_icon:after {\n  content: \"\";\n  background: #ffffff;\n  display: block;\n  position: absolute;\n  padding-top: 261%;\n  padding-left: 350%;\n  margin-left: -62px !important;\n  margin-top: -200%;\n  opacity: 0;\n  transition: all 0.4s;\n}\n.user_icon:active:after {\n  padding: 0;\n  margin: 0;\n  opacity: 1;\n  transition: 0s;\n}\n#system_bar .title {\n  font-size: 20px;\n  font-weight: bold;\n  flex: 1;\n  text-align: center;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0s linear,opacity 0.5s linear;\n  color: white;\n}\n#system_bar.active {\n  height: 40px;\n}\n#system_bar.active #system_time {\n  visibility: visible;\n}\n#system_bar.active .title {\n  visibility: visible;\n  opacity: 1;\n  transition-delay: 1s;\n}\n#system_bar.active .user_icon {\n  visibility: visible;\n  transition-delay: 2s;\n  transform: scale(1);\n}\n.title > div {\n  display: inline-block;\n}\n.title > div:after {\n  content: '';\n  display: block;\n  clear: both;\n}\n.title > div span {\n  width: 20px;\n  display: block;\n  float: left;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.56);\n  box-shadow: 1px 1px 1px 0 #5a5a5a;\n  position: relative;\n}\n.title_0 {\n  background-color: #4285f4;\n}\n.title_1 {\n  background-color: #db4437;\n}\n.title_2 {\n  background-color: #f4b400;\n}\n.title_3 {\n  background-color: #0f9d58;\n}\n.title_4 {\n  background-color: #333333;\n}\n.title_5 {\n  background-color: #ffac50;\n}\n.title_6 {\n  background-color: #ff89d3;\n}\n/* Window */\n.window {\n  width: 600px;\n  height: 400px;\n  position: absolute;\n  box-shadow: 0 0 2px 0 rgba(0, 0, 0, 0.2);\n  background: rgba(255, 255, 255, 0.9);\n  z-index: 2;\n  opacity: 0;\n  transform: scale(0.8);\n  transition: opacity 0.2s ease, transform 0.2s linear;\n}\n.window.active {\n  opacity: 1;\n  transform: scale(1);\n}\n.window.focus {\n  box-shadow: 0 0 8px 0 #464646;\n  z-index: 3;\n}\n.window > h1 {\n  margin: 0;\n  font-size: 16px;\n  display: flex;\n  padding: 0 5px 0 0;\n  background-color: #545454;\n}\n.window > h1 > span {\n  display: block;\n  color: white;\n  font-weight: normal;\n  padding: 5px;\n  flex: 1;\n}\n.window > h1 > div {\n  float: right;\n  width: 27px;\n  height: 32px;\n}\n.window > h1 > div.separator {\n  content: '';\n  display: block;\n  border-right: 1px solid rgba(255, 255, 255, 0.75);\n  width: 0;\n  height: 22px;\n  margin: 5px 2px;\n}\n.window > h1 > div.close {\n  cursor: pointer;\n}\n.window > h1 > div.close:hover:before {\n  background: #b53b00;\n}\n.window > h1 > div.close:before {\n  content: '';\n  display: block;\n  width: 8px;\n  height: 8px;\n  border-radius: 6px;\n  margin: 9px 0 8px 8px;\n  border: 2px solid rgba(255, 255, 255, 0.75);\n  /*box-shadow: 0 1px 1px rgba(255, 255, 255, 0.27);*/\n}\n/* Terminal */\n.terminal {\n  color: green;\n}\n.terminal > div {\n  padding: 5px;\n  -webkit-user-select: initial;\n  -moz-user-select: initial;\n  -ms-user-select: initial;\n  user-select: initial;\n  cursor: text;\n}\n.terminal input {\n  background: white;\n  border: none;\n  position: absolute;\n  bottom: 0;\n  color: green;\n  width: calc(100% - 10px);\n  padding: 5px;\n  border-radius: 0 0 2px 2px;\n}\n.terminal input:focus {\n  outline: none;\n}\n.terminal .ls-files {\n  -webkit-column-width: 100px;\n  column-width: 100px;\n}\n.window.terminal > h1 {\n  background-color: #8BC34A;\n}\n/** Shortcut **/\n#shortcuts {\n  margin-top: 140px;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  z-index: 2;\n  top: 0;\n}\n#shortcuts > div {\n  width: 96px;\n  height: 96px;\n  margin: 5px;\n  cursor: pointer;\n  position: relative;\n}\n#shortcuts > div > span {\n  visibility: hidden;\n  width: 96px;\n  background-color: #333333;\n  color: #fff;\n  text-align: center;\n  padding: 5px 0;\n  border-radius: 6px;\n  position: absolute;\n  z-index: 1;\n  top: 100%;\n  left: 50%;\n  margin-left: -48px;\n}\n#shortcuts > div:hover > span {\n  visibility: visible;\n}\n#shortcuts > div.ic_terminal {\n  background: url("+i(t(4))+");\n  background-size: contain;\n}\n/** Background **/\n#background {\n  position: absolute !important;\n  z-index: 1;\n  width: 100%;\n  height: 100%;\n  top: 0;\n}\n#background canvas {\n  position: absolute !important;\n}\n/** Timeline **/\n.timeline > div {\n  overflow: hidden;\n  position: relative;\n}\n.timeline > div > div {\n  position: absolute;\n}\n.timeline ul {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  position: relative;\n}\n.timeline ul li {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n}\n.timeline ul li:nth-child(1) > div {\n  background: #ff6745;\n  z-index: 99;\n}\n.timeline ul li:nth-child(2) > div {\n  background: #90ff92;\n  z-index: 98;\n}\n.timeline ul li:nth-child(3) > div {\n  background: #edff42;\n  z-index: 97;\n}\n.timeline ul li:nth-child(4) > div {\n  background: #ff7ce9;\n  z-index: 96;\n}\n.timeline ul li > div {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  border-radius: 50%;\n  overflow: hidden;\n  transition: all 0.5s ease;\n}\n.timeline .scrollbar {\n  position: absolute;\n  right: 0;\n  top: 20%;\n  width: 18px;\n  height: 60%;\n  display: flex;\n  flex-direction: column;\n  z-index: 99;\n}\n.timeline .scrollbar > div {\n  flex: 1;\n  z-index: 101;\n}\n.timeline .scrollbar > div:after {\n  content: '';\n  width: 11px;\n  height: 15px;\n  box-shadow: 0 0 3px black;\n  display: block;\n  background-color: #efefef;\n  border-radius: 5px;\n}\n.timeline .scrollbar > div.active:after {\n  background-color: #9e9e9e;\n}\n.timeline .scrollbar > div.active:nth-child(1):after {\n  background-color: #90ff92;\n}\n.timeline .scrollbar > div.active:nth-child(2):after {\n  background-color: #edff42;\n}\n.timeline .scrollbar > div.active:nth-child(3):after {\n  background-color: #ff7ce9;\n}\n.timeline .scrollbar > div.active:nth-child(4):after {\n  background-color: #ff6745;\n}\n.timeline .scrollbar .marker {\n  width: 6px;\n  height: 6px;\n  border-radius: 3px;\n  background-color: #272727;\n  top: 0;\n  right: 9px;\n  position: absolute;\n  z-index: 100;\n  display: block;\n}\n.timeline .date,\n.timeline .img {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: block;\n  z-index: 1;\n  background: transparent no-repeat center center;\n  border-radius: 50%;\n}\n.timeline .d1 .date {\n  background-image: url("+i(t(3))+");\n}\n.timeline .d1 .img {\n  background-image: url("+i(t(2))+");\n}\n",""])},function(n,e,t){var i=t(8);"string"==typeof i&&(i=[[n.i,i,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(1)(i,o);i.locals&&(n.exports=i.locals)},function(n,e,t){"use strict";t.r(e);t(9);let i=[];document.addEventListener("DOMContentLoaded",function(){window.addEventListener("resize",function(){a.onResize()},!1),a.onResize(),setTimeout(function(){document.getElementById("system_bar").className="active"},0),setTimeout(function(){let n=document.getElementById("progress");n.parentNode.removeChild(n),i.push(new r({name:"Terminal"})),new class extends l{constructor(){super({tooltipText:"Terminal"}),this.elem.className="ic_terminal"}handleClick(n){let e=new r({name:"Terminal"});e.setFocus(),i.push(e)}},new class extends l{constructor(){super({tooltipText:"Parcours"}),this.elem.className="ic_terminal"}handleClick(n){let e=new s({name:"Parcours",content:"#parcours"});e.setFocus(),i.push(e)}},document.getElementById("system_content").addEventListener("click",function(){a.loseFocusWindows()},!1)},0),new class{constructor(n){let e=n.innerHTML;n.innerHTML="";let t=Math.floor(10*Math.random()),i=document.createElement("div");for(let n=0;n<e.length;n++){let o=document.createElement("span");o.innerText=e[n],o.className="title_"+(n+t)%7,o.style.marginTop=Math.floor(9*Math.random()+2)+"px",o.style.zIndex=100-n,i.appendChild(o)}n.appendChild(i)}}(document.querySelector("#system_bar .title")),new class{constructor(n){this.elem=n,setInterval(this.update.bind(this),6e4),this.update()}update(){let n=new Date;this.elem.innerHTML=n.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})+"<br/>"+n.toLocaleDateString()}}(document.getElementById("system_time")),document.querySelector("#system_bar .user_icon").addEventListener("click",function(){a.createUniqueWindow({name:"Credits",content:"#credits"})})});class o{constructor(n){this.options=n,this.id=(new Date).valueOf(),this.mouseHandler=this.handleMove.bind(this),this.elem=document.createElement("div"),this.elem.className="window";let e=document.createElement("span");e.innerHTML=n.name;let t=document.createElement("div");t.className="close",t.addEventListener("click",this.close.bind(this),!1);let i=document.createElement("div");i.className="separator",this.titlebar=document.createElement("h1"),this.titlebar.appendChild(e),this.titlebar.appendChild(i),this.titlebar.appendChild(t),this.titlebar.addEventListener("mousedown",this.mouseHandler,!1),this.titlebar.addEventListener("mouseup",this.mouseHandler,!1),this.elem.addEventListener("click",this.mouseHandler,!1),this.elem.appendChild(this.titlebar),this.content=document.createElement("div"),void 0!==n.content&&this.content.appendChild(document.querySelector(n.content).cloneNode(!0)),this.elem.appendChild(this.content),this.elem.style.left=document.body.clientWidth/2-300+"px",this.elem.style.top="90px",document.getElementById("system_content").appendChild(this.elem),setTimeout(this.show.bind(this),10)}loseFocus(){this.elem.className=this.elem.className.replace(" focus","")}setFocus(){-1===this.elem.className.indexOf("focus")&&(this.elem.className+=" focus"),a.loseFocusWindows(this.id)}close(){document.getElementById("system_content").removeChild(this.elem),a.closeWindow(this)}show(){this.elem.className+=" active"}handleMove(n){switch(n.type){case"click":this.setFocus(),this.onMouseUp();break;case"mousedown":this.setFocus(),this.moving=!0,this.offset={x:this.elem.offsetLeft-n.clientX,y:this.elem.offsetTop-n.clientY},this.elem.addEventListener("mousemove",this.mouseHandler,!1);break;case"mouseup":this.moving=!1,this.elem.removeEventListener("mousemove",this.mouseHandler,!1);break;case"mousemove":this.moving&&(this.elem.style.left=n.clientX+this.offset.x+"px",this.elem.style.top=n.clientY+this.offset.y+"px")}n.stopPropagation()}onMouseUp(){}}class r extends o{constructor(n){super(n),this.keyHandler=this.handleKey.bind(this),this.elem.className+=" terminal",this.input=document.createElement("input"),this.input.addEventListener("keydown",this.keyHandler,!1),this.elem.appendChild(this.input),this.methods=[{name:"credits",action:function(){a.createUniqueWindow({name:"Credits",content:"#credits"})}},{name:"parcours",action:function(){i.push(new s({name:"Parcours",events:"#parcours event"}))}}],this.history=[]}onMouseUp(){this.setCaretAtEnd()}handleKey(){switch(event.type){case"keydown":if("Tab"===event.key){let n="";for(let e=0;e<this.methods.length;e++)n+=this.methods[e].name+"<br/>";this.addline("ls-files",n)}else if("Enter"===event.key){let n=!1;for(let e=0;e<this.methods.length;e++)this.input.value===this.methods[e].name&&(console.log("launch "+this.methods[e].name),n=!0,this.methods[e].action());n||this.addline("","Commande <strong>'"+this.input.value+"'</strong> inconnue"),this.history.push(this.input.value),this.input.value=""}else{if("ArrowUp"!==event.key)break;this.input.value=this.history[0]}event.preventDefault()}}setCaretAtEnd(){let n=this.input.value.length;if(document.selection){this.input.focus();let e=document.selection.createRange();e.moveStart("character",-n),e.moveStart("character",n),e.moveEnd("character",0),e.select()}else(this.input.selectionStart||"0"===this.input.selectionStart)&&(this.input.selectionStart=n,this.input.selectionEnd=n,this.input.focus())}addline(n,e){let t=document.createElement("div");t.className=n,t.innerHTML=e,this.content.appendChild(t)}}class s extends o{constructor(n){super(n),this.elem.className+=" timeline",this.wheelHandler=this.handleMousewheel.bind(this),this.content.addEventListener("mousewheel",this.wheelHandler,!1),this.content.style.width=this.elem.clientWidth+"px",this.content.style.height=this.elem.clientHeight-this.titlebar.clientHeight+"px";let e=this.content.childNodes[0];e.style.width=1.5*this.elem.clientWidth+"px",e.style.height=1.5*this.elem.clientWidth+"px",e.style.top=-(1.5*this.elem.clientWidth-this.content.clientHeight)/2+"px",e.style.left=-(1.5*this.elem.clientWidth-this.content.clientWidth)/2+"px",this.scrollbar=document.createElement("div"),this.scrollbar.className="scrollbar";for(let n=0;n<e.children[0].children.length;n++)this.scrollbar.appendChild(document.createElement("div"));this.scrollbarMarker=document.createElement("span"),this.scrollbarMarker.className="marker",this.scrollbar.appendChild(this.scrollbarMarker),this.content.appendChild(this.scrollbar),this.animationNbState=12,this.animationProgress=0,this.animationMax=(e.children[0].children.length-1)*this.animationNbState,this.prevCurrent=null}handleMousewheel(n){this.animationProgress-=Math.max(-1,Math.min(1,n.wheelDelta||-n.detail)),this.animationProgress=Math.min(Math.max(0,this.animationProgress),this.animationMax);let e=Math.floor(this.animationProgress/this.animationNbState),t=this.animationProgress%this.animationNbState,i=(this.animationNbState-t)*(100/this.animationNbState)+"%";e>0&&(this.content.children[0].children[0].children[e-1].children[0].style.width="0%",this.content.children[0].children[0].children[e-1].children[0].style.height="0%"),this.content.children[0].children[0].children[e].children[0].style.width=i,this.content.children[0].children[0].children[e].children[0].style.height=i,this.scrollbar.children[e].className="active",null!==this.prevCurrent&&this.prevCurrent!==e&&(this.scrollbar.children[this.prevCurrent].className=""),this.prevCurrent=e,this.scrollbarMarker.style.top=this.animationProgress/this.animationMax*75+"%"}}class a{static onResize(){document.querySelector("body").style.height=document.documentElement.clientHeight+"px"}static createUniqueWindow(n){let e=!1;if(i.forEach(function(t){if(t.options.content===n.content)return e=!0,t.setFocus(),!1}),!e){let e=new o(n);e.setFocus(),i.push(e)}}static loseFocusWindows(n){i.forEach(function(e){n!==e.id&&e.loseFocus()})}static closeWindow(n){i.splice(i.indexOf(n),1)}}class l{constructor(n){this.clickHandler=this.handleClick.bind(this),this.elem=document.createElement("div"),this.elem.addEventListener("click",this.clickHandler,!1);let e=document.createElement("span");e.innerText=n.tooltipText,this.elem.appendChild(e),document.getElementById("shortcuts").appendChild(this.elem)}handleClick(n){}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,